name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: "Install dependencies"
        run: sudo apt-get update && sudo apt-get install -y --fix-missing shellcheck

      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "shellcheck"
        run: test/shellcheck

  linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - alpine
          - archlinux
          - debian
          - fedora
          - opensuse-tumbleweed
          - ubuntu
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "Run tests"
        run: test/run -p ${{ matrix.platform }}

  macos:
    runs-on: macos-latest
    steps:
      - name: "Install dependencies"
        run: |
          brew install bash fzf parallel
          brew install --cask keepassxc

      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "Run tests"
        run: test/run -c no-shellcheck -j $(sysctl -n hw.logicalcpu)

  coverage:
    runs-on: macos-latest
    steps:
      - name: "Install dependencies"
        run: |
          brew install bash fzf kcov parallel
          brew install --cask keepassxc

      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "Test coverage"
        run: test/coverage --jobs $(sysctl -n hw.logicalcpu) test

      - name: "Upload coverage report"
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }} coverage report
          path: coverage

  coveralls:
    needs: coverage
    runs-on: macos-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "Download coverage report"
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.repository.name }} coverage report
          path: coverage

      - name: "Generate lcov"
        run: |
          dotnet tool install -g dotnet-reportgenerator-globaltool
          reportgenerator -reports:"coverage/**/cobertura.xml" -targetdir:"coverage" -reporttypes:"lcov"

      - name: Coveralls
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "coverage/lcov.info"
